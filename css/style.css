/* import local roboto condensed */

@font-face {
  font-family: "Roboto Condensed";
  src: url("../fonts/RobotoCondensed-Medium.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Roboto Condensed";
  src: url("../fonts/RobotoCondensed-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
}

:root {
  --caption-height: 50px;
  --caption-height-large: 50px;
  --image-size: 256px;
  --color-background: #222;
  --color-primary: #999;
  --color-secondary: rgb(48, 55, 68);
  --color-highlight: #fff;
  --color-dot: #ccc;
  --font-family: "Roboto Condensed", Gotham, "Helvetica Neue", Helvetica, Arial,
    sans-serif;
}

body {
  background: var(--color-background);
  color: var(--color-primary);
  font-family: var(--font-family);
  margin: 0 0 1rem 0;
  padding: 1rem;
  font-size: medium;
}

/* headings */

h1 {
  font-size: x-large;
  margin: 0 0 1rem 0;
  color: var(--color-highlight);
}

h2 {
  font-size: large;
  margin: 0 0 1rem 0;
  color: var(--color-highlight);
}

/* menu header, contains menu and index */

#menu-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

/* menu  */

#menu {
  display: flex;
  justify-content: flex-start;
  align-content: flex-start;
  flex-wrap: wrap;
}

#menu a {
  font-weight: bold;
  background-color: var(--color-secondary);
  color: var(--color-primary);
  text-decoration: none;
  margin-right: 0.2rem;
  padding: 0.4rem;
  transition: color 0.3s ease;
  margin-bottom: 0.5rem;
}

#menu a:hover,
.highlight {
  /* color: var(--color-highlight); */
  /* use filter to make color and background brighter */
  filter: brightness(1.5);
}

#menu a:active,
#menu a.active {
  background-color: var(--color-highlight);
  color: var(--color-secondary);
}

/* default index buttons */

#index button {
  font-family: var(--font-family);
  font-weight: bold;
  font-size: medium;
  padding: 0.4rem;
  border: none;
  background-color: var(--color-secondary); /* Use existing color */
  color: var(--color-primary); /* Use existing color */
  /* transition: box-shadow 0.3s ease; */
}

#index button:hover {
  filter: brightness(1.5);
}

#index button.active {
  background: rgba(255, 255, 255, 0.8);
  transition: background 0.3s ease;
  color: var(--color-background);
}

#grid {
  /* container for responsive grid, grid of images 256x256 */
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0 auto;
  padding: 0 1rem;
}

#grid .grid-item {
  /* images in grid */
  height: calc(var(--image-size) + var(--caption-height));
  width: var(--image-size);
  box-sizing: border-box; /* include border and padding in element's total width and height */
  margin: 0 10px 10px 0;
}

.grid-item {
  position: relative;
  width: var(--image-size);
  height: calc(var(--image-size) + var(--caption-height));
  transition: color 0.3s ease;
}

.grid-item img {
  cursor: pointer;
}

.overlay {
  position: absolute;
  bottom: calc(0px + var(--caption-height));
  right: 0;
  width: auto;
  display: flex;
  justify-content: flex-end;
  visibility: hidden; /* hide the overlay by default */
}

.overlay.show {
  visibility: visible; /* show the overlay */
}

.dot {
  display: flex;
  width: 25px;
  height: 25px;
  border-top: 1px solid var(--color-dot);
  border-bottom: 1px solid var(--color-dot);
  border-right: 1px solid var(--color-dot);
  box-sizing: border-box; /* Includes border in the width and height */
  cursor: pointer;
  background: rgba(255, 255, 255, 0.2);
}

.dot:first-child {
  border-left: 1px solid var(--color-dot); /* Add left border to the first .dot */
}

.dot .number {
  width: 100%;
  color: var(--color-dot);

  /* center inside parent, both horizontally and vertically */
  display: flex;
  justify-content: center;
  align-items: center;
}

.dot .number:hover,
.dot.active .number {
  background: rgba(255, 255, 255, 0.8);
  transition: background 0.3s ease;
  color: var(--color-background);
}

.caption {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: var(--caption-height);
  display: flex;
  justify-content: center;
  align-items: start;
  font-weight: bold;
  text-align: center;
}

.caption:hover {
  filter: brightness(1.4);
}

.caption.highlight {
  z-index: 1;
  filter: brightness(1.4);
}

#grid img {
  width: var(--image-size);
  height: var(--image-size);
  border-radius: 5px;
}

.copyable {
  cursor: pointer;
}

/* tooltip */

[data-title]:hover::after {
  content: attr(data-title);
  position: absolute;
  top: 100%; /* change from bottom to top */
  left: 50%;
  transform: translateX(-50%);
  background: var(--color-secondary);
  color: var(--color-primary);
  padding: 0.5em;
  border-radius: 0.3em;
  white-space: nowrap;
  z-index: 9999;
  opacity: 0;
  transition: opacity 0.3s ease;
}

[data-title]:hover::after {
  opacity: 1;
}

/* modal  */

.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
  transition: all 0.3s ease;
}

/* values here should match values in modalMultiGrid() in scripts/index.js */

.modal-content-grid {
  display: grid;
  z-index: 2;
  justify-content: center; /* center horizontally */
  align-content: center; /* center vertically */
  position: fixed;
  background-color: #fefefe;
  padding: 20px;
  border: 1px solid #888;
  top: 50%; /* position at the center of the viewport vertically */
  left: 50%; /* position at the center of the viewport horizontally */
  transform: translate(-50%, -50%); /* move the modal to the center */
  transition: all 0.3s ease;

  /* align content in each grid element to the middle */
  align-items: center;
  justify-items: center;

  /* these below change when transitioning between single to multi grid */
  grid-template-columns: repeat(2, 1fr);
  gap: 10px;
  width: 512px;

  /* last value is experimentally determined */
  height: calc(var(--caption-height-large) + 512px + 10px);
}

.modal-content-grid.single {
  grid-template-columns: 1fr;
  gap: 0;
  width: 768px;

  /* last value is experimentally determined */
  height: calc(var(--caption-height-large) + 768px + 5px);
}

.modal-content-grid .prompt {
  grid-column: 1 / span 2;
  text-align: center;
  color: #222;
  font-weight: bold;
  font-size: large;
  height: var(--caption-height-large);
}

.modal-content-grid img {
  cursor: pointer;
}

img.size-256 {
  height: 256px;
  width: 256px;
}

img.size-512 {
  height: 512px;
  width: 512px;
  margin-bottom: 0.5rem;
}

img.size-768 {
  height: 768px;
  width: 768px;
  margin-bottom: 0.5rem;
}

img.size-1024 {
  height: auto;
  width: 1024px;
}

/* footer  */

#footer {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

/* anchors */

a {
  color: var(--color-primary);
  text-decoration: underline;
  text-decoration-color: rgba(255, 255, 255, 0.3);
  transition: color 0.3s ease;
}

a:hover {
  color: var(--color-highlight);
}

a.active {
  background-color: var(--color-highlight);
  color: var(--color-highlight);
  text-decoration: none;
}

/* search bar  */

#search-container {
  position: absolute;
  top: 10px;
  right: 10px;
}

@media (max-width: 768px) {
  #search-container {
    display: none;
  }
}

input#search-input {
  font-family: var(--font-family);
  font-weight: bold;
  font-size: medium;
  padding: 10px;
  border: none;
  background-color: var(--color-secondary); /* Use existing color */
  color: var(--color-highlight); /* Use existing color */
  transition: box-shadow 0.3s ease;
}

input#search-input:focus {
  outline: none;
  /* border: 1px solid var(--color-highlight); */
}

button#search-clear {
  font-family: var(--font-family);
  font-weight: bold;
  font-size: medium;
  padding: 10px;
  border: none;
  background-color: var(--color-secondary); /* Use existing color */
  color: var(--color-primary); /* Use existing color */
  transition: box-shadow 0.3s ease;
}

button#search-clear:hover {
  filter: brightness(1.5);
}

.hidden {
  display: none !important;
}

#about {
  font-size: large;
}

#index button {
  cursor: pointer;
}

summary {
  font-weight: bold;
  cursor: pointer;
}
